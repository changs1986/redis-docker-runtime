# bind 127.0.0.1
logfile "/tmp/sentinel1.log"
port 26379
# 设定密码认证
requirepass "yourpassword"
# 配置哨兵的监控参数
# 格式：sentinel monitor <master-name> <ip> <redis-port> <quorum>
# master-name是为这个被监控的master起的名字
# ip是被监控的master的IP或主机名。因为Docker容器之间可以使用容器名访问，所以这里写master节点的容器名
# redis-port是被监控节点所监听的端口号
# quorom设定了当几个哨兵判定这个节点失效后，才认为这个节点真的失效了
sentinel monitor redis-server-master 172.20.0.4 6379 2

# 连接主节点的密码
# 格式：sentinel auth-pass <master-name> <password>
sentinel auth-pass redis-server-master yourpassword

# master在连续多长时间无法响应PING指令后，就会主观判定节点下线，默认是30秒

sentinel failover-timeout redis-server-master 900000
#后台执行
daemonize no

sentinel resolve-hostnames yes
# Generated by CONFIG REWRITE
pidfile "/var/run/redis.pid"
user default on #e3c652f0ba0b4801205814f8b6bc49672c4c74e25b497770bb89b22cdeb4e951 ~* &* +@all
dir "/data"
sentinel myid 2a8ca5dd4ff53dc8f33a254be3708ae2a88bcc3c
sentinel config-epoch redis-server-master 0
sentinel leader-epoch redis-server-master 0
sentinel current-epoch 0
sentinel known-replica redis-server-master 172.20.0.2 6379
sentinel known-replica redis-server-master 172.20.0.3 6379
